Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

Accel_Raw           0x6               main.o
AccelY_G            0x4               main.o
AccelZ_G            0x4               main.o
AccelX_G            0x4               main.o
Gyro_Raw            0x8               main.o
Acc_Degree          0x2               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD uart.o
LOAD wdt.o
LOAD adc.o
LOAD spi.o
LOAD i2c.o
LOAD twimaster.o
LOAD interrupt.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x5ec
 *(.vectors)
 .vectors       0x00000000       0x68 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000074                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000084        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000008c        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x0000008c                __vector_22
                0x0000008c                __vector_1
                0x0000008c                __vector_24
                0x0000008c                __vector_12
                0x0000008c                __bad_interrupt
                0x0000008c                __vector_6
                0x0000008c                __vector_23
                0x0000008c                __vector_25
                0x0000008c                __vector_11
                0x0000008c                __vector_13
                0x0000008c                __vector_17
                0x0000008c                __vector_19
                0x0000008c                __vector_7
                0x0000008c                __vector_5
                0x0000008c                __vector_4
                0x0000008c                __vector_9
                0x0000008c                __vector_21
                0x0000008c                __vector_15
                0x0000008c                __vector_8
                0x0000008c                __vector_14
                0x0000008c                __vector_10
                0x0000008c                __vector_16
                0x0000008c                __vector_20
 .text          0x00000090       0xd0 main.o
                0x00000090                __vector_3
                0x00000136                main
                0x00000110                initialize
 .text          0x00000160       0x8a uart.o
                0x00000186                uart_write
                0x00000196                uart_write2
                0x00000160                uart_init
                0x00000178                uart_read
                0x000001ba                __vector_18
 .text          0x000001ea       0x14 wdt.o
                0x000001fa                wdt_reset
                0x000001ea                wdt_init
 .text          0x000001fe       0x36 adc.o
                0x00000206                adc_read
                0x000001fe                adc_init
 .text          0x00000234       0x9e spi.o
                0x00000234                spi_init
                0x0000026c                spi_read
                0x0000028a                __vector_2
                0x00000250                spi_write
 .text          0x000002d2      0x1be i2c.o
                0x00000342                gyro_init
                0x0000037e                accel_read
                0x000002d2                i2c_reg_write
                0x000002f0                accel_init
                0x000003f6                gyro_read
 .text          0x00000490      0x10a twimaster.o
                0x0000054e                i2c_write
                0x00000586                i2c_readNak
                0x00000572                i2c_readAck
                0x00000538                i2c_rep_start
                0x0000049c                i2c_start
                0x0000053e                i2c_stop
                0x000004e8                i2c_start_wait
                0x00000490                i2c_init
 .text          0x0000059a       0x4e interrupt.o
                0x0000059a                interrupt_init
                0x000005bc                gyro_interrupt_init
                0x000005d2                accel_interrupt_init
 .text          0x000005e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x000005e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000005e8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000005e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000005e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000005e8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000005e8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000005e8                exit
                0x000005e8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000005e8        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000005ec                _etext = .

.data           0x00800100        0x0 load address 0x000005ec
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 uart.o
 .data          0x00800100        0x0 wdt.o
 .data          0x00800100        0x0 adc.o
 .data          0x00800100        0x0 spi.o
 .data          0x00800100        0x0 i2c.o
 .data          0x00800100        0x0 twimaster.o
 .data          0x00800100        0x0 interrupt.o
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x1d
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800100        0x0 main.o
 .bss           0x00800100        0x0 uart.o
 .bss           0x00800100        0x0 wdt.o
 .bss           0x00800100        0x1 adc.o
                0x00800100                stop
 .bss           0x00800101        0x0 spi.o
 .bss           0x00800101        0x0 i2c.o
 .bss           0x00800101        0x0 twimaster.o
 .bss           0x00800101        0x0 interrupt.o
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800101       0x1c main.o
                0x00800101                Accel_Raw
                0x00800107                AccelY_G
                0x0080010b                AccelZ_G
                0x0080010f                AccelX_G
                0x00800113                Gyro_Raw
                0x0080011b                Acc_Degree
                0x0080011d                PROVIDE (__bss_end, .)
                0x000005ec                __data_load_start = LOADADDR (.data)
                0x000005ec                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080011d        0x0
                0x0080011d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080011d                PROVIDE (__noinit_end, .)
                0x0080011d                _end = .
                0x0080011d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x100
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 uart.o
 .debug_aranges
                0x00000040       0x20 wdt.o
 .debug_aranges
                0x00000060       0x20 adc.o
 .debug_aranges
                0x00000080       0x20 spi.o
 .debug_aranges
                0x000000a0       0x20 i2c.o
 .debug_aranges
                0x000000c0       0x20 twimaster.o
 .debug_aranges
                0x000000e0       0x20 interrupt.o

.debug_pubnames
                0x00000000      0x2d3
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x8a main.o
 .debug_pubnames
                0x0000008a       0x5d uart.o
 .debug_pubnames
                0x000000e7       0x2d wdt.o
 .debug_pubnames
                0x00000114       0x35 adc.o
 .debug_pubnames
                0x00000149       0x49 spi.o
 .debug_pubnames
                0x00000192       0x5e i2c.o
 .debug_pubnames
                0x000001f0       0x8d twimaster.o
 .debug_pubnames
                0x0000027d       0x56 interrupt.o

.debug_info     0x00000000      0xb4a
 *(.debug_info)
 .debug_info    0x00000000      0x205 main.o
 .debug_info    0x00000205      0x11a uart.o
 .debug_info    0x0000031f       0xa5 wdt.o
 .debug_info    0x000003c4       0xcd adc.o
 .debug_info    0x00000491      0x21a spi.o
 .debug_info    0x000006ab      0x240 i2c.o
 .debug_info    0x000008eb      0x196 twimaster.o
 .debug_info    0x00000a81       0xc9 interrupt.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x644
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x127 main.o
 .debug_abbrev  0x00000127       0xb8 uart.o
 .debug_abbrev  0x000001df       0x72 wdt.o
 .debug_abbrev  0x00000251       0x92 adc.o
 .debug_abbrev  0x000002e3      0x12b spi.o
 .debug_abbrev  0x0000040e      0x10a i2c.o
 .debug_abbrev  0x00000518       0xbe twimaster.o
 .debug_abbrev  0x000005d6       0x6e interrupt.o

.debug_line     0x00000000      0xb8a
 *(.debug_line)
 .debug_line    0x00000000      0x1dc main.o
 .debug_line    0x000001dc      0x12d uart.o
 .debug_line    0x00000309       0xbb wdt.o
 .debug_line    0x000003c4       0xdb adc.o
 .debug_line    0x0000049f      0x1bf spi.o
 .debug_line    0x0000065e      0x237 i2c.o
 .debug_line    0x00000895      0x233 twimaster.o
 .debug_line    0x00000ac8       0xc2 interrupt.o

.debug_frame    0x00000000      0x280
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 main.o
 .debug_frame   0x00000040       0x60 uart.o
 .debug_frame   0x000000a0       0x30 wdt.o
 .debug_frame   0x000000d0       0x30 adc.o
 .debug_frame   0x00000100       0x50 spi.o
 .debug_frame   0x00000150       0x60 i2c.o
 .debug_frame   0x000001b0       0x90 twimaster.o
 .debug_frame   0x00000240       0x40 interrupt.o

.debug_str      0x00000000      0x312
 *(.debug_str)
 .debug_str     0x00000000      0x127 main.o
                                0x15b (size before relaxing)
 .debug_str     0x00000127       0x4f uart.o
                                0x10e (size before relaxing)
 .debug_str     0x00000176       0x2c wdt.o
                                 0xe6 (size before relaxing)
 .debug_str     0x000001a2       0x23 adc.o
                                 0xf4 (size before relaxing)
 .debug_str     0x000001c5       0x56 spi.o
                                0x165 (size before relaxing)
 .debug_str     0x0000021b       0x48 i2c.o
                                0x174 (size before relaxing)
 .debug_str     0x00000263       0x77 twimaster.o
                                0x13e (size before relaxing)
 .debug_str     0x000002da       0x38 interrupt.o
                                0x101 (size before relaxing)

.debug_loc      0x00000000      0x230
 *(.debug_loc)
 .debug_loc     0x00000000       0x18 main.o
 .debug_loc     0x00000018       0x64 uart.o
 .debug_loc     0x0000007c       0x13 wdt.o
 .debug_loc     0x0000008f       0x13 adc.o
 .debug_loc     0x000000a2       0x18 spi.o
 .debug_loc     0x000000ba       0xb7 i2c.o
 .debug_loc     0x00000171       0xbf twimaster.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SupportBoardV100.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x48 main.o
